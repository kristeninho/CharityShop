// <auto-generated />
using CharityShop.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CharityShop.Data.Migrations
{
    [DbContext(typeof(ProductDbContext))]
    partial class ProductDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CharityShop.Data.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookedQuantity")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<uint>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid")
                        .HasColumnName("xmin");

                    b.Property<int>("TotalQuantity")
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookedQuantity = 0,
                            Name = "Brownie",
                            Price = 0.65000000000000002,
                            RowVersion = 0u,
                            TotalQuantity = 48,
                            Type = 0
                        },
                        new
                        {
                            Id = 2,
                            BookedQuantity = 0,
                            Name = "Muffin",
                            Price = 1.0,
                            RowVersion = 0u,
                            TotalQuantity = 36,
                            Type = 0
                        },
                        new
                        {
                            Id = 3,
                            BookedQuantity = 0,
                            Name = "Cake pop",
                            Price = 1.3500000000000001,
                            RowVersion = 0u,
                            TotalQuantity = 24,
                            Type = 0
                        },
                        new
                        {
                            Id = 4,
                            BookedQuantity = 0,
                            Name = "Apple tart",
                            Price = 1.5,
                            RowVersion = 0u,
                            TotalQuantity = 60,
                            Type = 0
                        },
                        new
                        {
                            Id = 5,
                            BookedQuantity = 0,
                            Name = "Water",
                            Price = 1.5,
                            RowVersion = 0u,
                            TotalQuantity = 30,
                            Type = 0
                        },
                        new
                        {
                            Id = 6,
                            BookedQuantity = 0,
                            Name = "Shirt",
                            Price = 2.0,
                            RowVersion = 0u,
                            TotalQuantity = 0,
                            Type = 1
                        },
                        new
                        {
                            Id = 7,
                            BookedQuantity = 0,
                            Name = "Pants",
                            Price = 3.0,
                            RowVersion = 0u,
                            TotalQuantity = 0,
                            Type = 1
                        },
                        new
                        {
                            Id = 8,
                            BookedQuantity = 0,
                            Name = "Jacket",
                            Price = 4.0,
                            RowVersion = 0u,
                            TotalQuantity = 0,
                            Type = 1
                        },
                        new
                        {
                            Id = 9,
                            BookedQuantity = 0,
                            Name = "Toy",
                            Price = 1.0,
                            RowVersion = 0u,
                            TotalQuantity = 0,
                            Type = 1
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
